#!/usr/bin/env python

import sys
import logging
import re
import os
import argparse


def main():
    # first creating the parser(it will also handle required args)
    parser = argparse.ArgumentParser()
    parser.add_argument("file_name")
    args = parser.parse_args()

    # extracting the file name
    file_name: str = args.file_name

    # match the format [name].[extension]
    matched = re.findall(r"\..*$", file_name)

    if not matched:
        logging.error(f"Not valid filename: {file_name}")
        sys.exit(1)

    extension = matched[0]

    ext_to_cmds: dict = {
        ".py": [f"python {file_name}"],
        ".cpp": [f"g++ {file_name} -o cpp_bin", "./cpp_bin"],
        ".js": [f"node {file_name}"],
        ".ts": [f"npx ts-node {file_name}"],
    }

    if extension in ext_to_cmds:
        cmds = ext_to_cmds[extension]
        for cmd in cmds:
            os.system(cmd)
    else:
        logging.error(f"Cannot execute provided file : {file_name}")
        logging.error(f"Currently supported file types: {[i for i in ext_to_cmds.keys()]}")
        sys.exit(1)


# good practice for python scripts
if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    main()
